@page "/register"
@using Models.DTOs
@inject Client.Services.AuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@* @if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
} *@

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="UserRegisterDTO" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="UserRegisterDTO.Email" />
                <ValidationMessage For="@(() => UserRegisterDTO.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="UserRegisterDTO.Password" />
                <ValidationMessage For="@(() => UserRegisterDTO.Password)" />
            </div>
            @* <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="UserRegisterDTO.ConfirmPassword" />
                <ValidationMessage For="@(() => UserRegisterDTO.ConfirmPassword)" />
            </div> *@
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private UserRegisterDTO UserRegisterDTO = new UserRegisterDTO();
    private bool ShowErrors;
    private string msg;
    //private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(UserRegisterDTO);

        msg = result.ToString();
        System.Console.WriteLine(msg);

        @* if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        } *@
    }

}