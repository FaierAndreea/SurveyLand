@using Models
@inject HttpClient Http

<h3>QUesti0ns</h3>

@if (Survey != null) {
    <EditForm Model=result OnSubmit=FormSubmitted>
        @foreach(var q in Survey.Questions) {
            <div class="index">@(index+1) .</div>
            <div class="statement">@q.Statement</div>
            <div class="d-flex justify-content-around form-check mt-4 mb-5">
                <div class="option">
                    <input class="form-check-input" type="radio" name="@index" id="exampleRadios1" value=1>
                    <label class="form-check-label" for="exampleRadios1">
                        @q.Option1
                    </label>
                </div>
                <div class="option">
                    <input class="form-check-input" type="radio" name="@index" id="exampleRadios2" value=2>
                    <label class="form-check-label" for="exampleRadios2">
                        @q.Option2
                    </label>
                </div>
            </div>
            index++;
        }
        <input type="submit" value="Submit" class="btn btn-primary" />
    </EditForm>
}

@code {
    [Parameter]
    public Models.Survey Survey { get; set; }
    Result result = new Result();
    int index = 0;
    protected override void OnInitialized()
    {
        result.Answers = new List<Answer>();
        if(Survey != null) {
            foreach (var question in Survey.Questions) {
                result.Answers.Add(new Answer() {QuestionId = question.Id});
            }
        } 
    }
    public void FormSubmitted() {
        foreach(var item in result.Answers) {
            Console.WriteLine(item.Option);
        }
    }
    public class Result {
        public List<Answer> Answers { get; set; }
    }
}
