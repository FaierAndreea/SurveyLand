@page "/survey/{SurveyId:int}"
@inject HttpClient Http
@inject NavigationManager Navigation

@if (survey != null) {
    <div style="height: 100vh; background-image: url(@survey.Picture); background-size: cover;">
        <TopBar ComponentName=@survey.Title />
        <div class="details">
            <p>@survey.Description</p>
            @* This needs CascadingAuthenticationState to work *@
            @* <AuthorizeView>
                <Authorized> *@
                    <button class="btn btn-outline-light" @onclick=ShowQuestions >Click to start</button>
                @* </Authorized>
                <NotAuthorized>
                    Nu este voie
                </NotAuthorized>
            </AuthorizeView> *@
        </div>
    </div>
}

@code {
    [Parameter]
    public int SurveyId { get; set; } = 0;
    private Models.Survey survey;

    protected async override Task OnParametersSetAsync() {
        survey = await Http.GetFromJsonAsync<Models.Survey>("https://localhost:5001/api/Surveys/" + SurveyId);
    }

    private void ShowQuestions() {
        Navigation.NavigateTo($"/questions/{survey.Id}");
    }
}